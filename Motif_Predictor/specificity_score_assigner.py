# This script assigns motif specificity scores to detected motifs from protein sequences

import numpy as np
import pandas as pd
import pickle
from Motif_Predictor.predictor_config import predictor_params

def apply_specificity_scores(protein_seqs_df, motif_cols, predictor_params=predictor_params):
    '''
    Main function for applying specificity scores to identified motif sequences

    Args:
        protein_seqs_df (pd.DataFrame): dataframe of protein sequences scored with conditional matrices
        motif_cols (list): 				list of columns containing motifs found by score_protein_motifs.py
        predictor_params (dict): 		dict of user-defined parameters for the predictive pipeline

    Returns:
        protein_seqs_df (pd.DataFrame): dataframe with added columns for specificity scores
    '''

    print(f"Assigning specificity scores...")

    # Load the SpecificityMatrix object generated by matrix_generator.py
    specificity_matrix_path = predictor_params["specificity_matrix_path"]
    with open(specificity_matrix_path, "rb") as f:
        specificity_matrix = pickle.load(f)

    # Score the motif sequences
    use_specificity_weighted = predictor_params["use_specificity_weighted"]
    cols = list(protein_seqs_df.columns)
    for motif_col in motif_cols:
        motif_col_index = cols.index(motif_col)
        specificity_score_col = motif_col + "_specificity_score"

        # Score the non-blank motif sequences
        motif_seqs = protein_seqs_df[motif_col].to_numpy()
        not_nan = protein_seqs_df[motif_col].notna().to_numpy()
        not_blank = protein_seqs_df[motif_col].ne("").to_numpy()
        not_blank = np.logical_and(not_nan, not_blank)
        valid_motifs = motif_seqs[not_blank]
        valid_motifs_2d = np.array([list(motif) for motif in valid_motifs])

        if len(valid_motifs_2d) > 0 and valid_motifs_2d.ndim == 2:
            valid_specificity_scores = specificity_matrix.score_motifs(valid_motifs_2d, use_specificity_weighted)

            # Apply the specificity score values to rows where there are non-blank motifs present
            specificity_score_vals = np.full(shape=len(protein_seqs_df), fill_value=np.nan, dtype=float)
            specificity_score_vals[not_blank] = valid_specificity_scores
            protein_seqs_df[specificity_score_col] = specificity_score_vals
            cols.insert(motif_col_index + 2, specificity_score_col)

    # Reorder dataframe
    protein_seqs_df = protein_seqs_df[cols]

    return protein_seqs_df
